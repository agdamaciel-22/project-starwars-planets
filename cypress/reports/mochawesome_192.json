{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-08-10T20:24:33.847Z",
    "end": "2022-08-10T20:24:35.013Z",
    "duration": 1166,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "fff63a98-adf8-4472-8b52-1d3241ab63ae",
      "title": "",
      "fullFile": "cypress/integration/02.filterByName_spec.js",
      "file": "cypress/integration/02.filterByName_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "80c23611-58d0-4079-bd30-5f792cc1c743",
          "title": "2 - Crie um filtro de texto para a tabela",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Filtre os planetas que possuem a letra \"o\" no nome",
              "fullTitle": "2 - Crie um filtro de texto para a tabela Filtre os planetas que possuem a letra \"o\" no nome",
              "timedOut": null,
              "duration": 317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('o');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_O);\nconst planetNames = ['Coruscant', 'Dagobah', 'Endor', 'Hoth', 'Kamino', 'Naboo', 'Tatooine'];\nplanetNames.forEach(planet => {\n  cy.contains(planet);\n});",
              "err": {
                "message": "ReferenceError: The following error originated from your application code, not from Cypress.\n\n  > filterByNumericValues is not defined\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `2 - Crie um filtro de texto...`",
                "estack": "ReferenceError: The following error originated from your application code, not from Cypress.\n\n  > filterByNumericValues is not defined\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `2 - Crie um filtro de texto...`\n    at TableProvider (http://localhost:3000/static/js/bundle.js:697:7)\n    at renderWithHooks (http://localhost:3000/static/js/bundle.js:23979:22)\n    at mountIndeterminateComponent (http://localhost:3000/static/js/bundle.js:26741:17)\n    at beginWork (http://localhost:3000/static/js/bundle.js:27940:20)\n    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:12929:18)\n    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:12978:20)\n    at invokeGuardedCallback (http://localhost:3000/static/js/bundle.js:13038:35)\n    at beginWork$1 (http://localhost:3000/static/js/bundle.js:32780:11)\n    at performUnitOfWork (http://localhost:3000/static/js/bundle.js:31616:16)\n    at workLoopSync (http://localhost:3000/static/js/bundle.js:31553:9)",
                "diff": null
              },
              "uuid": "2e9a0247-ae55-4571-bb41-044e5dbc7141",
              "parentUUID": "80c23611-58d0-4079-bd30-5f792cc1c743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filtre planetas que possuem a letra \"oo\" no nome",
              "fullTitle": "2 - Crie um filtro de texto para a tabela Filtre planetas que possuem a letra \"oo\" no nome",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('oo');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_OO);\ncy.contains('Naboo');\ncy.contains('Tatooine');",
              "err": {},
              "uuid": "15182a64-58ad-47a6-8a50-0a083bb2c019",
              "parentUUID": "80c23611-58d0-4079-bd30-5f792cc1c743",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Faça vários filtros em sequência",
              "fullTitle": "2 - Crie um filtro de texto para a tabela Faça vários filtros em sequência",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('o');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_O);\nconst planetNames = ['Coruscant', 'Dagobah', 'Endor', 'Hoth', 'Kamino', 'Naboo', 'Tatooine'];\nplanetNames.forEach(planet => {\n  cy.contains(planet);\n});\ncy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).type('o');\ncy.get('table tr').should('have.length', ROWS_WITH_LETTER_OO);\ncy.contains('Naboo');\ncy.contains('Tatooine');\ncy.getByTestId(_dataTestIds.INPUT_FILTER_NAME).clear();\ncy.get('table tr').should('have.length', ROWS_TOTAL);\nplanets.forEach(({\n  name\n}) => {\n  cy.contains(name);\n});",
              "err": {},
              "uuid": "0d60ab9e-767a-40b6-a93f-249df27c9ca0",
              "parentUUID": "80c23611-58d0-4079-bd30-5f792cc1c743",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2e9a0247-ae55-4571-bb41-044e5dbc7141"
          ],
          "pending": [],
          "skipped": [
            "15182a64-58ad-47a6-8a50-0a083bb2c019",
            "0d60ab9e-767a-40b6-a93f-249df27c9ca0"
          ],
          "duration": 317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}