{"ast":null,"code":"var _jsxFileName = \"/home/myrella/\\xC1rea de Trabalho/projetos2/sd-021-b-project-starwars-planets-search/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport TableContext from '../context/TableContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const {\n    data,\n    filterByName\n  } = useContext(TableContext);\n  console.log(data);\n\n  if (data === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(data[0]).map((prop, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: prop\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.filter(el => el.name.includes(filterByName)).map((planet, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.rotation_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.orbital_period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.diameter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.climate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.gravity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.terrain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.surface_water\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.population\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.films\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.edite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: planet.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"AMQbjbP/4tD+BL4x8oVZBchDw0Q=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useContext","TableContext","Table","data","filterByName","console","log","Object","keys","map","prop","index","filter","el","name","includes","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edite","url"],"sources":["/home/myrella/√Årea de Trabalho/projetos2/sd-021-b-project-starwars-planets-search/src/components/Table.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport TableContext from '../context/TableContext';\n\nfunction Table() {\n  const { data, filterByName } = useContext(TableContext);\n  console.log(data);\n  if (data === null) {\n    return null;\n  }\n  return (\n    <table>\n      <thead>\n        <tr>\n          {Object.keys(data[0]).map((prop, index) => (<th key={ index }>{prop}</th>))}\n        </tr>\n      </thead>\n      <tbody>\n\n        {data.filter((el) => el.name.includes(filterByName)).map((planet, index) => (\n          <tr key={ index }>\n            <td>{planet.name}</td>\n            <td>{planet.rotation_period}</td>\n            <td>{planet.orbital_period}</td>\n            <td>{planet.diameter}</td>\n            <td>{planet.climate}</td>\n            <td>{planet.gravity}</td>\n            <td>{planet.terrain}</td>\n            <td>{planet.surface_water}</td>\n            <td>{planet.population}</td>\n            <td>{planet.films}</td>\n            <td>{planet.created}</td>\n            <td>{planet.edite}</td>\n            <td>{planet.url}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAyBJ,UAAU,CAACC,YAAD,CAAzC;EACAI,OAAO,CAACC,GAAR,CAAYH,IAAZ;;EACA,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,IAAP;EACD;;EACD,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,UACGI,MAAM,CAACC,IAAP,CAAYL,IAAI,CAAC,CAAD,CAAhB,EAAqBM,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,kBAAkB;UAAA,UAAmBD;QAAnB,GAAUC,KAAV;UAAA;UAAA;UAAA;QAAA,QAA3C;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,UAEGR,IAAI,CAACS,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACC,IAAH,CAAQC,QAAR,CAAiBX,YAAjB,CAApB,EAAoDK,GAApD,CAAwD,CAACO,MAAD,EAASL,KAAT,kBACvD;QAAA,wBACE;UAAA,UAAKK,MAAM,CAACF;QAAZ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAKE,MAAM,CAACC;QAAZ;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UAAKD,MAAM,CAACE;QAAZ;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,UAAKF,MAAM,CAACG;QAAZ;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAKH,MAAM,CAACI;QAAZ;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA,UAAKJ,MAAM,CAACK;QAAZ;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UAAA,UAAKL,MAAM,CAACM;QAAZ;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE;UAAA,UAAKN,MAAM,CAACO;QAAZ;UAAA;UAAA;UAAA;QAAA,QARF,eASE;UAAA,UAAKP,MAAM,CAACQ;QAAZ;UAAA;UAAA;UAAA;QAAA,QATF,eAUE;UAAA,UAAKR,MAAM,CAACS;QAAZ;UAAA;UAAA;UAAA;QAAA,QAVF,eAWE;UAAA,UAAKT,MAAM,CAACU;QAAZ;UAAA;UAAA;UAAA;QAAA,QAXF,eAYE;UAAA,UAAKV,MAAM,CAACW;QAAZ;UAAA;UAAA;UAAA;QAAA,QAZF,eAaE;UAAA,UAAKX,MAAM,CAACY;QAAZ;UAAA;UAAA;UAAA;QAAA,QAbF;MAAA,GAAUjB,KAAV;QAAA;QAAA;QAAA;MAAA,QADD;IAFH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GAnCQT,K;;KAAAA,K;AAqCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}